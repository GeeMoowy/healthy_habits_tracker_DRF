services:
  backend:
    image: ${{ secrets.DOCKER_HUB_USERNAME }}/myapp:${{ github.sha }}
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app  # Монтирование кода
      - static_volume:/app/staticfiles  # Отдельный том для статики
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  db:
    image: postgres:16.9
    env_file:
      - ./.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.2
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  celery:
    build: .
    command: celery -A config worker --loglevel=info
    volumes:
      - .:/app
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
      - backend

  celery_beat:
    build: .
    command: celery -A config beat --loglevel=info
    volumes:
      - .:/app
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
      - backend

  nginx:
    build:
      context: ./nginx
    ports:
      - "80:80"
      - "443:443"  # Опционально для HTTPS
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf  # Конфиг Nginx
      - static_volume:/app/staticfiles  # Статика Django
    depends_on:
      - backend  # Ждём запуска Django
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  static_volume: